(define r remainder)
(define (gcd a b)
  (if (= b 0)
      a
      (gcd b (r a b))))

Normal-order:
(gcd 206 40)
(if (= 40 0) 206 (gcd 40 (r 206 40)))
(gcd 40 (r 206 40))
(if (= (r 206 40) 0) ...) ; 1
(gcd (r 206 40) (r 40 (r 206 40)))
(if (= (r 40 (r 206 40)) 0) ...) ; 3
(gcd (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40))))
(if (= (r (r 206 40) (r 40 (r 206 40))) 0) ...) ; 7
(gcd (r (r 206 40) (r 40 (r 206 40)))
     (r (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40)))))
(if (= (r (r 40 (r 206 40)) (r (r 206 40) (r 40 (r 206 40)))) 0) ...) ; 14
(r (r 206 40) (r 40 (r 206 40))) ; 18

Applicative-order:
(gcd 206 40)
(if (= 40 0) ...)
(gcd 40 (r 206 40)) ; 1
(gcd 40 6)
(if (= 6 0) ...)
(gcd 6 (r 40 6)) ; 2
(gcd 6 4)
(if (= 4 0) ...)
(gcd 4 (r 6 4)) ; 3
(gcd 4 2)
(if (= 2 0) ...)
(gcd 2 (r 4 2)) ; 4
(gcd 2 0)
(if (= 0 0) ...)
2
